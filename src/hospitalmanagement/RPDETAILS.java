/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagement;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aumrudh Lal Kumar TJ
 */
public class RPDETAILS extends javax.swing.JFrame {

    /**
     * Creates new form RPDETAILS
     */
    public final void docadd(){
    try{
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital","root","Jeyakumar28");
    PreparedStatement smt=conn.prepareStatement("Select SSN  from doctor");
    ResultSet rs=smt.executeQuery();
    doctor.addItem("");
    while(rs.next()){
        doctor.addItem(rs.getString("SSN"));        
    }
    }       
    catch(Exception e1){
     System.out.print(e1);
    }
    }
    public RPDETAILS() {
        initComponents();
        docadd();
        docname.setEditable(false);
         try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/HOSPITAL","root","Jeyakumar28");
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM patient");
                ResultSet rs = ps.executeQuery();
                DefaultTableModel tm = (DefaultTableModel)table1.getModel();
                tm.setRowCount(0);
                PreparedStatement st1 = conn.prepareStatement("Select * from treats ");
                ResultSet rs1 = st1.executeQuery();
                while(rs.next() && rs1.next())
                {
                    Object obj[] = {rs.getInt("SSN"),rs.getString("fname"),rs.getString("lname"),rs.getString("dob"),rs.getString("bloodgroup"),rs.getString("gender"),rs.getString("disease"),rs.getInt("age"),rs.getString("maritialstatus"),rs.getString("mobileno"),rs.getString("address"),rs.getString("firstvisit"),rs.getString("lastvisit"),rs.getString("nextvisit"),rs1.getInt(1)};
                    tm.addRow(obj);
                }
                
                    
            }
            catch(Exception e)
            {
             //   JOptionPane.showMessageDialog(null, e);
            }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        martial = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        mobileno = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        fname = new javax.swing.JTextField();
        SSN = new javax.swing.JTextField();
        other = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        bloodgroup = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        disease = new javax.swing.JTextField();
        married = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        unmarried = new javax.swing.JRadioButton();
        deletepatient = new javax.swing.JButton();
        updatepatient = new javax.swing.JButton();
        searchpatient = new javax.swing.JButton();
        back = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        firstvisit = new com.toedter.calendar.JDateChooser();
        dob = new com.toedter.calendar.JDateChooser();
        adddoctor = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        doctor = new javax.swing.JComboBox<>();
        docname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Receptionist Patient Details");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SSN", "First Name", "Last Name ", "D.O.B", "Blood Group", "Gender", "Disease Name", "Age", "Maritial Status", "Mobile No", "Address", "First visit", "Last visit", "Next visit", "Doctor Id"
            }
        ));
        jScrollPane2.setViewportView(table1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 655, 1278, 220));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Patient's SSN  :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 200, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("First Name  :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, 25));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("Date Of Birth  :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Gender  :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 114, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("Age  :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 136, 25));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("Moblie No  :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, -1, 25));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setText("Address  :");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 550, 106, 25));

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        getContentPane().add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 550, 680, -1));

        mobileno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobilenoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobilenoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobilenoKeyTyped(evt);
            }
        });
        getContentPane().add(mobileno, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 490, 240, -1));

        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageKeyPressed(evt);
            }
        });
        getContentPane().add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 432, 250, 25));

        gender.add(male);
        male.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        male.setForeground(new java.awt.Color(0, 0, 204));
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });
        getContentPane().add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, -1, -1));

        gender.add(female);
        female.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        female.setForeground(new java.awt.Color(0, 0, 204));
        female.setText("Female");
        female.setToolTipText("");
        female.setAutoscrolls(true);
        female.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });
        getContentPane().add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, -1, -1));
        getContentPane().add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 240, -1));

        SSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNActionPerformed(evt);
            }
        });
        SSN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SSNKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SSNKeyTyped(evt);
            }
        });
        getContentPane().add(SSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 240, 50));

        gender.add(other);
        other.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        other.setForeground(new java.awt.Color(0, 0, 204));
        other.setText("Other");
        other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherActionPerformed(evt);
            }
        });
        getContentPane().add(other, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText(" Last Name  :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, -1, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Blood Group  :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 130, 25));
        getContentPane().add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, 242, -1));

        bloodgroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "O+ve", "A+ve", "B+ve", "AB+ve", "O-ve", "A-ve", "B-ve", "AB-ve" }));
        bloodgroup.setAutoscrolls(true);
        getContentPane().add(bloodgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 290, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("Disease Name  :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 160, 25));

        disease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diseaseActionPerformed(evt);
            }
        });
        getContentPane().add(disease, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 350, 220, -1));

        martial.add(married);
        married.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        married.setForeground(new java.awt.Color(0, 0, 204));
        married.setText("Married");
        married.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marriedActionPerformed(evt);
            }
        });
        getContentPane().add(married, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setText("Maritial Status  :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, 160, 25));

        martial.add(unmarried);
        unmarried.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        unmarried.setForeground(new java.awt.Color(0, 0, 204));
        unmarried.setText("Unmarried");
        unmarried.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmarriedActionPerformed(evt);
            }
        });
        getContentPane().add(unmarried, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 420, -1, -1));

        deletepatient.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        deletepatient.setText("Delete Patient");
        deletepatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletepatientActionPerformed(evt);
            }
        });
        getContentPane().add(deletepatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(983, 288, 190, 65));

        updatepatient.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        updatepatient.setText("Update Patient");
        updatepatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatepatientActionPerformed(evt);
            }
        });
        getContentPane().add(updatepatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(983, 382, 190, 65));

        searchpatient.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        searchpatient.setText("Search Patient");
        searchpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpatientActionPerformed(evt);
            }
        });
        getContentPane().add(searchpatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 110, -1, 60));

        back.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(1051, 33, 100, 40));

        clear.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 550, 186, 54));

        jLabel15.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 204));
        jLabel15.setText("                  Patient Detail's");
        jLabel15.setAutoscrolls(true);
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 430, 70));
        getContentPane().add(firstvisit, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, -1, -1));
        getContentPane().add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        adddoctor.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        adddoctor.setText("Add Patient");
        adddoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adddoctorActionPerformed(evt);
            }
        });
        getContentPane().add(adddoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 210, 190, 60));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 204));
        jLabel12.setText("Doctor Id");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 610, -1, -1));

        doctor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                doctorItemStateChanged(evt);
            }
        });
        getContentPane().add(doctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 610, 110, -1));
        getContentPane().add(docname, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 610, 200, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 204));
        jLabel14.setText("First Visit");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 470, 180, 50));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void mobilenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilenoKeyPressed
        String phone = mobileno.getText();
        int len = phone.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
        if(len<10){
        mobileno.setEditable(true);
        }
        else{
        mobileno.setEditable(false);
        }
        }
         else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                mobileno.setEditable(true);
            }
            else{
                mobileno.setEditable(false);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilenoKeyPressed

    private void mobilenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilenoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilenoKeyReleased

    private void mobilenoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobilenoKeyTyped
        // TODO add your handling code here:
        String phone = mobileno.getText();
        int len = phone.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
        if(len<10){
        mobileno.setEditable(true);
        }
        else{
        mobileno.setEditable(false);
        }
        }
         else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                mobileno.setEditable(true);
            }
            else{
                mobileno.setEditable(false);
            }
        }
    }//GEN-LAST:event_mobilenoKeyTyped

    private void ageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyPressed
        String a = age.getText();
        int length = a.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<2){
                age.setEditable(true);
            }
            else{
                age.setEditable(false);
            }
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                age.setEditable(true);
            }
            else{
                age.setEditable(false);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ageKeyPressed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        if(male.isSelected())
        {
            female.setSelected(false);
            other.setSelected(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        if(female.isSelected())
        {
            male.setSelected(false);
            other.setSelected(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void SSNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SSNKeyReleased
        
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNKeyReleased

    private void SSNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SSNKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_SSNKeyTyped

    private void otherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherActionPerformed
        if(other.isSelected())
        {
            female.setSelected(false);
            male.setSelected(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_otherActionPerformed

    private void diseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diseaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diseaseActionPerformed

    private void marriedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marriedActionPerformed
        if(married.isSelected())
        {
            unmarried.setSelected(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_marriedActionPerformed

    private void unmarriedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmarriedActionPerformed
        if(unmarried.isSelected())
        {
            married.setSelected(false);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_unmarriedActionPerformed

    private void updatepatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatepatientActionPerformed
try{
            CONNECTION con = new CONNECTION();
            String ssn1 = SSN.getText();
            String sql1 = "delete from patient where SSN =?";
            PreparedStatement st1 = con.c.prepareStatement(sql1);
            st1.setString(1,ssn1);
            st1.executeUpdate();
            String sql = "insert into patient(SSN,fname,lname,dob,bloodgroup,gender,disease,age,maritialstatus,mobileno,address) values(?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement st = con.c.prepareStatement(sql);
            int ssn = Integer.parseInt(SSN.getText());
            String first = fname.getText();
            String last = lname.getText();
            String dis = disease.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
            String birthdate = dateFormat.format(dob.getDate());
            String blood = (String)bloodgroup.getSelectedItem();
            String gen;
            //   String vtiming = (String)timing.getSelectedItem();
            if(male.isSelected())
            {
                gen = "Male";
            }
            else if(female.isSelected())
            {
                gen = "Female";
            }
            else
            {
                gen = "Other";
            }
            //          String dep = dept.getSelectedItem().toString();
            int ag = Integer.parseInt(age.getText());
            String mstatus;
            if(married.isSelected())
            {
                mstatus = "Married";
            }
            else
            {
                mstatus = "Unmarried";
            }
            String mobno = mobileno.getText();
            String add = address.getText();
            st.setInt(1, ssn);
            st.setString(2,first);
            st.setString(3,last);
            st.setString(4,birthdate);
            st.setString(5,blood);
            st.setString(6,gen);
            st.setString(7,dis);
            st.setInt(8,ag);
            st.setString(9,mstatus);
            st.setString(10,mobno);
            st.setString(11,add );
            //      st.setString(15,vtiming);
            //if(SSN.getText.equlas(""))

            int i = st.executeUpdate();
            if (i > 0){
                JOptionPane.showMessageDialog(null, "Patient's Details Successfully Updated");
            }
            else {
                JOptionPane.showMessageDialog(null,"Failed try again");
            }
            SSN.setText("");
            fname.setText("");
            lname.setText("");
            disease.setText("");
            dob.setCalendar(null);
            gender.clearSelection();
            martial.clearSelection();
            bloodgroup.setSelectedIndex(0);
            //dept.setSelectedIndex(0);
            age.setText("");
            mobileno.setText("");
            address.setText("");
            firstvisit.setCalendar(null);
            }
            catch(Exception e){
                System.out.println(e);
            }
try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/HOSPITAL","root","Jeyakumar28");
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM patient");
                ResultSet rs = ps.executeQuery();
                DefaultTableModel tm = (DefaultTableModel)table1.getModel();
                tm.setRowCount(0);
                while(rs.next())
                {
                    Object obj[] = {rs.getInt("SSN"),rs.getString("fname"),rs.getString("lname"),rs.getString("dob"),rs.getString("bloodgroup"),rs.getString("gender"),rs.getString("disease"),rs.getInt("age"),rs.getString("maritialstatus"),rs.getString("mobileno"),rs.getString("address")};
                    tm.addRow(obj);
                }
            }
            catch(Exception e)
            {
             //   JOptionPane.showMessageDialog(null, e);
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_updatepatientActionPerformed

    private void searchpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpatientActionPerformed
         int ssn = Integer.parseInt(SSN.getText());
        try
        {
            CONNECTION con = new CONNECTION();// TODO add your handling code here:
            String sql = "Select * from patient where SSN = ?";
            PreparedStatement st = con.c.prepareStatement(sql);
            st.setInt(1,ssn);
            ResultSet rs = st.executeQuery();            
            String sql1 = "Select * from treats where pssn = ?"; 
            PreparedStatement st1 = con.c.prepareStatement(sql1);
            st1.setInt(1,ssn);
            ResultSet rs1 = st1.executeQuery();
            while(rs.next()&&rs1.next())
            {
                int t=rs1.getInt(1);
                System.out.println(t);
                int temp=t+3;
                System.out.println(temp);
                
                doctor.setSelectedItem(t);
                fname.setText(rs.getString("fname"));
                lname.setText(rs.getString("lname"));
                String [] bloodarr = {"","O+ve","A+ve","B+ve","AB+ve","O-ve","A-ve","B-ve","AB-ve"};
                for(int i=0;i<9;i++)
                {
                    if(rs.getString("bloodgroup").equals(bloodarr[i]))
                    {
                        bloodgroup.setSelectedIndex(i);
                    }
                }
                String gen = rs.getString("gender");
                if(gen.equals("Male"))
                {
                    male.setSelected(true);
                    female.setSelected(false);
                    other.setSelected(false);
                }
                else if(gen.equals("Female"))
                {
                    male.setSelected(false);
                    female.setSelected(true);
                    other.setSelected(false);
                }
                else
                {
                    male.setSelected(false);
                    female.setSelected(false);
                    other.setSelected(true);
                }
                String mstat = rs.getString("maritialstatus");
                if(mstat.equals("Married"))
                {
                    married.setSelected(true);
                    unmarried.setSelected(false);
                }
                else
                {
                    married.setSelected(false);
                    unmarried.setSelected(true);
                }
                age.setText(String.valueOf(rs.getInt("age")));
                mobileno.setText(rs.getString("mobileno"));
                address.setText(rs.getString("address"));
                disease.setText(rs.getString("disease"));
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("dob"));
                dob.setDate(date);
                Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString("firstvisit"));
                firstvisit.setDate(date1);               
            }    
            int ssn1 = Integer.parseInt(SSN.getText());
            int f = 0;
            String sq = "Select SSN from patient";
            PreparedStatement ps = con.c.prepareStatement(sq);
            ResultSet res = ps.executeQuery();
            while(res.next())
            {
                if(ssn1 == res.getInt("SSN"))
                {
                    f++;
                }
            }
            if(f == 1)
            {
                //JOptionPane.showMessageDialog(null,"Doctor SSN already exists !");
                //SSN.setText("");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Invalid patient's SSN try again !");
                SSN.setText("");
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_searchpatientActionPerformed

    private void deletepatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletepatientActionPerformed

        try{
            CONNECTION con = new CONNECTION();
            String ssn1 = SSN.getText();
            String sql1 = "delete from patient where SSN =?";
            PreparedStatement st1 = con.c.prepareStatement(sql1);
            st1.setString(1,ssn1);
            int i = st1.executeUpdate();
            if (i > 0){
                JOptionPane.showMessageDialog(null, "Patient Details Successfully deleted !");
            }
            else {
                JOptionPane.showMessageDialog(null,"Failed try again");
            }
            
            SSN.setText("");
            fname.setText("");
            lname.setText("");
            disease.setText("");
            dob.setCalendar(null);
            gender.clearSelection();
            martial.clearSelection();
            bloodgroup.setSelectedIndex(0);
            //dept.setSelectedIndex(0);
            age.setText("");
            mobileno.setText("");
            address.setText("");
            }
            catch(Exception e){
                System.out.println(e);
            }
        try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/HOSPITAL","root","Jeyakumar28");
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM patient");
                ResultSet rs = ps.executeQuery();
                DefaultTableModel tm = (DefaultTableModel)table1.getModel();
                tm.setRowCount(0);
                while(rs.next())
                {
                    Object obj[] = {rs.getInt("SSN"),rs.getString("fname"),rs.getString("lname"),rs.getString("dob"),rs.getString("bloodgroup"),rs.getString("gender"),rs.getString("disease"),rs.getInt("age"),rs.getString("maritialstatus"),rs.getString("mobileno"),rs.getString("address")};
                    tm.addRow(obj);
                }
            }
            catch(Exception e)
            {
             //   JOptionPane.showMessageDialog(null, e);
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_deletepatientActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        dispose();
        new RECHOME().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
            SSN.setText("");
            fname.setText("");
            lname.setText("");
            disease.setText("");
            dob.setCalendar(null);
            gender.clearSelection();
            martial.clearSelection();
            bloodgroup.setSelectedIndex(0);
            age.setText("");
            mobileno.setText("");
            address.setText("");
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/HOSPITAL","root","Jeyakumar28");
                PreparedStatement ps = conn.prepareStatement("SELECT * FROM patient");
                ResultSet rs = ps.executeQuery();
                DefaultTableModel tm = (DefaultTableModel)table1.getModel();
                tm.setRowCount(0);
                while(rs.next())
                {
                    Object obj[] = {rs.getInt("SSN"),rs.getString("fname"),rs.getString("lname"),rs.getString("dob"),rs.getString("bloodgroup"),rs.getString("gender"),rs.getString("disease"),rs.getInt("age"),rs.getString("maritialstatus"),rs.getString("mobileno"),rs.getString("address")};
                    tm.addRow(obj);
                }
            }
            catch(Exception e)
            {
             //   JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_clearActionPerformed

    private void SSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNActionPerformed

    private void adddoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adddoctorActionPerformed

        try{
            CONNECTION con = new CONNECTION();

            String sql = "insert into patient(SSN,fname,lname,dob,bloodgroup,gender,disease,age,maritialstatus,mobileno,address,firstvisit,lastvisit,nextvisit) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement st = con.c.prepareStatement(sql);
            int ssn = Integer.parseInt(SSN.getText());
            String first = fname.getText();
            String last = lname.getText();
            String dis = disease.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
            String birthdate = dateFormat.format(dob.getDate());
            String blood = (String)bloodgroup.getSelectedItem();
            // String vtiming = (String)timing.getSelectedItem();
            String gen = null;
            if(male.isSelected())
            {
                gen = "Male";
            }
            else if(female.isSelected())
            {
                gen = "Female";
            }
            else if(other.isSelected())
            {
                gen = "Other";
            }
            else
            {
            }
            // String dep = dept.getSelectedItem().toString();
            int ag = Integer.parseInt(age.getText());
            String mstatus;
            if(married.isSelected())
            {
                mstatus = "Married";
            }
            else
            {
                mstatus = "Unmarried";
            }
            String mobno = mobileno.getText();
            String add = address.getText();
            String fvisit = dateFormat.format(firstvisit.getDate());
            st.setInt(1, ssn);
            st.setString(2,first);
            st.setString(3,last);
            st.setString(4,birthdate);
            st.setString(5,blood);
            st.setString(6,gen);
            st.setString(7,dis);
            st.setInt(8,ag);
            st.setString(9,mstatus);
            st.setString(10,mobno);
            st.setString(11,add );
            st.setString(12,fvisit);
            st.setNull(13,Types.NULL);
            st.setNull(14,Types.NULL);
            //if(SSN.getText.equlas(""))

            int i = st.executeUpdate();
            String tdssn=(String)doctor.getSelectedItem();
            int dssn=Integer.parseInt(tdssn);
            String sql1 = "insert into treats(dssn,pssn) values(?,?)";
            PreparedStatement st1 = con.c.prepareStatement(sql1);
            st1.setInt(1,dssn);
            st1.setInt(2, ssn);
            int i1 = st1.executeUpdate();
            if (i > 0&&i1>0){
                JOptionPane.showMessageDialog(null, "Patient's Details Successfully Created");
            }
            else {
                JOptionPane.showMessageDialog(null,"Failed try again");
            }
            SSN.setText("");
            fname.setText("");
            lname.setText("");
            dob.setCalendar(null);
            disease.setText("");
            gender.clearSelection();
            martial.clearSelection();
            bloodgroup.setSelectedIndex(0);
            //dept.setSelectedIndex(0);
            age.setText("");
            mobileno.setText("");
            address.setText("");
            doctor.setSelectedIndex(0);
            firstvisit.setCalendar(null);
            docname.setText("");
        }
        catch(Exception e){
            System.out.println(e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_adddoctorActionPerformed

    private void doctorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_doctorItemStateChanged
        // TODO add your handling code here:
        String ss1=(String)doctor.getSelectedItem();
        try{
            int s1=Integer.parseInt(ss1);
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital","root","Jeyakumar28");
            PreparedStatement smt=conn.prepareStatement("Select fname,lname from doctor where SSN=?");
            smt.setInt(1,s1);
            ResultSet rs=smt.executeQuery();
            while(rs.next()){
                docname.setText(rs.getString("fname")+" "+rs.getString("lname"));
            }
        }
        catch(Exception e1){
            //ystem.out.print(e1);
        }
    }//GEN-LAST:event_doctorItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new RPDETAILS().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RPDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RPDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RPDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RPDETAILS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RPDETAILS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SSN;
    private javax.swing.JButton adddoctor;
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> bloodgroup;
    private javax.swing.JButton clear;
    private javax.swing.JButton deletepatient;
    private javax.swing.JTextField disease;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField docname;
    private javax.swing.JComboBox<String> doctor;
    private javax.swing.JRadioButton female;
    private com.toedter.calendar.JDateChooser firstvisit;
    private javax.swing.JTextField fname;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lname;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton married;
    private javax.swing.ButtonGroup martial;
    private javax.swing.JTextField mobileno;
    private javax.swing.JRadioButton other;
    private javax.swing.JButton searchpatient;
    private static javax.swing.JTable table1;
    private javax.swing.JRadioButton unmarried;
    private javax.swing.JButton updatepatient;
    // End of variables declaration//GEN-END:variables
}
